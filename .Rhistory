fff <- function(...)
{
x<-list(...)
for (i in x)
{print(i)}
}
fff(10)
fff(10,20,30,405,06,04052025)
fff(12012041204,124012509712)
View(fff)
View(fff)
View(fff)
View(fff)
View(fff)
fff<-function()
hap<-function(...)
{
x<-list(...)
for (i in x)
hap<-function(...)
{
x<-list(...)
for (i in x)
{sum <- sum+i}
}
hap(10,20,30)
hap<-function(...)
{   sum <- 0
x<-list(...)
for (i in x)
{sum <- sum+i}
}
hap(10,20,30)
sum
> hap<-function(...)
{   total <- 0
x<-list(...)
for (i in x)
{total <- total+i}
return(total)}
hap<-function(...)
{ total <- 0
x <- list(...)
for (i in x)
{total <- total+i}
return(total)}
hap(10,20,30)
hap
ha
x <- 1:5
for (i in x)
{ifelse(i%%2!=0, print'홀수', print'짝수')}
x[1]
x <- 1:5
For (i in 1:5)
{ifelse(x[i]%%2!=0, print'홀수', print'짝수')}
{ifelse(x[i]%%2!=0, print'홀수', print'짝수')}
x <- 1:5
For (i in 1:5)
x <- 1:5
For (i in 1:5){ifelse(x[i]%%2!=0, print'홀수', print'짝수')}
x <- 1:5
For (i in 1:5){if(x[i]%%2!=0) {print'홀수' else print'짝수'}}
x <- 1:5
for (i in 1:5){if(x[i]%%2!=0) {print'홀수' else print'짝수'}}
for (i in 1:5){ifelse(x[i]%%2!=0,print'홀수',print'짝수'}
x <- 1:5
for (i in 1:5){ifelse(x[i]%%2!=0,print'홀수',print'짝수'}
for (i in 1:5){ifelse(x[i]%%2!=0,print('홀수'),print('짝수')}
x <- 1:5
for (i in 1:5){ifelse(x[i]%%2!=0,print('홀수'),print('짝수')}
{print(x[i])
ifelse(x[i]%%2==0,print('JJAK'),print('HOL'))
i <- i+1
}
while (i<=5)
{print(x[i])
ifelse(x[i]%%2==0,print('JJAK'),print('HOL'))
i <- i+1
}
x <- 1:5
while (i<=5)
x <- 1:5
while (i<=5)
{ i<-1
print(x[i])
ifelse(x[i]%%2==0,print('JJAK'),print('HOL'))
i <- i+1
}
x <- 1:5
while (i<=5)
{ i<-1
print(x[i])
ifelse(x[i]%%2==0,print('JJAK'),print('HOL'))
i <- i+1
}
x <- 1:5
i<-1
while (i<=5)
{
print(x[i])
ifelse(x[i]%%2==0,print('JJAK'),print('HOL'))
i <- i+1
}
help(lapply)
lapply(x, x%%2==0, fivenum)
lapply(x, 1, fivenum)
lapply(x, fivenum)
lapply(x, function(x){ifelse(x%%2==0,'짝','홀')})
View(fff)
emp<-read.csv('emp.csv header=T, stringsAsFactors=F')
emp1<-read.csv('emp.csv header=T, stringsAsFactors=F')
emp<-read.csv("emp.csv header=T, stringsAsFactors=F")
emp<-read.csv('emp.csv' header=T, stringsAsFactors=F)
emp<-read.csv('emp.csv', header=T, stringsAsFactors=F)
emp<-read.csv('emp.csv, header=T, stringsAsFactors=F')
emp<-read.csv('emp.csv', header=T, stringsAsFactors=F)
emp<-read.csv('emp.csv, header=T, stringsAsFactors=F')
emp<-read.csv("emp.csv", header=T, stringsAsFactors=F)
emp <- read.csv("C:/data/emp.csv", stringsAsFactors=FALSE)
View(emp)
install.packages("plyr")
library(plyr)
ddply(data,기준컬럼,함수)
ddply(emp, 'DEPARTMENT_ID', summarise, avg_sal=mean(SALARY))
ddply(emp, 'DEPARTMENT_ID', summarise, avg_sal=trunc(mean(SALARY)))
ddply(emp, c('DEPARTMENT_ID','JOB_ID'), summarise, avg_sal=trunc(mean(SALARY)))
ddply(emp, 'DEPARTMENT_ID', summarise, sum_sal=sum(SALARY), avg_sal=trunc(mean(SALARY)))
ddply(emp, 'DEPARTMENT_ID', summarise, cnt=length(EMPLOYEE_ID), sum_sal=sum(SALARY), avg_sal=trunc(mean(SALARY)))
fruits
fruits_sales <- read.csv("C:/data/fruits_sales.csv", stringsAsFactors=FALSE)
View(fruits_sales)
fruits<-fruits_sales
ddply(emp, 'DEPARTMENT_ID', summarise, cnt=length(EMPLOYEE_ID), sum_sal=sum(SALARY), avg_sal=trunc(mean(SALARY)))
ddply(fruits, 'name', summarise, sum_qty=sum(QTY), sum_sal=sum(sal))
ddply(fruits, 'name', summarise, sum_qty=sum(qty), sum_sal=sum(salary))
ddply(fruits, 'name', summarise, sum_qty=sum(qty), sum_pri=sum(price))
ddply(fruits, 'name', summarise, sum_qty=sum(qty), sum_pri=sum(price))
ddply(fruits, 'name', summarise, sum_qty=sum(qty), sum_pri=sum(price))
zaf<-ddply(fruits, 'name', summarise, sum_qty=sum(qty), sum_pri=sum(price))
names(zaf)->c('name','sumqty','sumpri')
names(zaf)->c('name','sumqty','sumpri')
names(zaf)->c('name','sumqty','sumpri')
zaf
rownames(zaf)->c('name','sumqty','sumpri')
colnames(zaf)->c('name','sumqty','sumpri')
colnames(zaf)->c("name","sumqty","sumpri")
colnames(zaf)<-c("name","sumqty","sumpri")
zaf
ddply(fruits, 'name', summarise, s_qty=sum(qty))
ddply(fruits, 'name', transform, s_qty=sum(qty))
g2a05010801 <- read.csv("C:/data/g2a05010801.csv", stringsAsFactors=FALSE)
View(g2a05010801)
ddply(fruits, 'year\', transform, s_qty=sum(qty))
ddply(fruits, 'year\', transform, s_qty=sum(qty))
ddply(fruits, 'year', transform, s_qty=sum(qty))
ddply(fruits, 'year', transform, per_qty=qty/sum(qty))
ddply(fruits, 'year', transform, per_qty=(qty/sum(qty)*100))
ddply(fruits, 'year', transform, s_qty=sum(qty), per_qty=(100*qty/sum(qty))
)
ddply(fruits, 'year', transform, s_qty=sum(qty), per_qty=(100*qty/sum(qty)))
ddply(fruits, 'name', transform, s_qty=sum(qty), per_qty=(100*qty/sum(qty)))
ddply(fruits, 'year', transform, s_qty=sum(qty), per_qty=(100*qty/sum(qty)))
install.packages("dplyr")
library(dplyr)
emp[emp$DEPARTMENT_ID==20,]
Filter(emp,DEPARTMENT_ID==20)
filter(emp,DEPARTMENT_ID==20)
na.omit(emp[emp$DEPARTMENT_ID==20,])
filter(emp,DEPARTMENT_ID==20)[,c('LAST_NAME','SALARY')]
filter(emp,DEPARTMENT_ID==20)[,2:5]
filter(emp,DEPARTMENT_ID==30 & SALARY >= 3000)[,1:5]
select(emp,LAST_NAME,SALARY)
select(emp, -SALARY, -COMMISSION_PCT)
emp%>% select (LAST_NAME,JOB_ID,SALARY)%>%filter(SALARY>=20000)
emp%>% select (LAST_NAME,JOB_ID,SALARY)%>%filter(SALARY>=10000)
emp%>% select (LAST_NAME,JOB_ID,SALARY)%>%filter(SALARY>=10000)%>%arrange(SALARY)
emp%>% select (LAST_NAME,JOB_ID,SALARY)%>%filter(SALARY>=10000)%>%arrange(desc(SALARY))
emp$SAL <- emp$SALARY * 12
mutate(emp,sal=SALARY*12)
emp$SAL<-NULL
df<-mutate(emp,sal=SALARY*12)
df
str(df)
emp%>%select(LAST_NAME,JOB_ID,SALARY,COMMISSION_PCT)%>%mutate(ANNUAL_SAL=SALARY*12+ifelse(is.na(COMMISSION_PCT),0,SALARY*COMMISSION_PCT))%>%arrange(desc(ANNUAL_SAL)))
emp%>%select(LAST_NAME,JOB_ID,SALARY,COMMISSION_PCT)%>%mutate(ANNUAL_SAL=SALARY*12+ifelse(is.na(COMMISSION_PCT),0,SALARY*COMMISSION_PCT))%>%arrange(desc(ANNUAL_SAL))
[문제143] emp 데이터 프레임을 새로운 df 이름으로 복제하세요.
df 데이터 프레임에  새로운 comm 컬럼을 생성하는데 COMMISSION_PCT 값을 기반으로 값을 입력하시고
결측값은 기존 COMMISSION_PCT의 평균 값으로 입력해주세요.(단 mutate함수를 이용하세요)
df<-emp%>%mutate(comm=ifelse(is.na(COMMISSION_PCT),mean(COMMISSION_PCT),COMMISSION_PCT))
df
df<-emp%>%mutate(comm=ifelse(is.na(COMMISSION_PCT),mean(COMMISSION_PCT),COMMISSION_PCT))
df
df<-emp%>%mutate(comm=ifelse(is.na(COMMISSION_PCT),mean(COMMISSION_PCT),COMMISSION_PCT))
mean(emp%commission_pct)
mean(emp%COMMISSION_PCT)
mean(emp$COMMISSION_PCT)
mean(na.omit(emp$COMMISSION_PCT)
)
)
mean(na.omit(emp$COMMISSION_PCT)
df<-emp%>%mutate(comm=ifelse(is.na(COMMISSION_PCT),mean(COMMISSION_PCT),COMMISSION_PCT))
df<-emp%>%mutate(comm=ifelse(is.na(COMMISSION_PCT),mean(na.omit(COMMISSION_PCT)),COMMISSION_PCT))
df
df<-emp
df<-df%>%mutate(comm=ifelse(is.na(COMMISSION_PCT),mean(COMMISSION_PCT, na.rm=T),COMMISSION_PCT))
df
emp%>%group_by(DEPARTMENT_ID)%>%summarise(sum_sal=sum(SALARY))
emp%>%summarise(sum_sal=sum(SALARY), mean_sal=mean(SALARY))
emp%>%summarise(max_sal=max(SALARY), min_sal=min(SALARY))
emp%>%group_by(DEPARTMENT_ID,JOB_ID)%>%summarise(sum_sal=sum(SALARY))
emp%>%group_at(c(“SALARY”,”COMMISSION_PCT”),sum,na.rm=TRUE)
emp%>%group_at(c("SALARY","COMMISSION_PCT"),sum,na.rm=TRUE)
emp %>% summarise_at(c("SALARY","COMMISSION_PCT"),sum,na.rm=TRUE)
emp %>% summarise_if(is.numeric,sum,na.rm=TRUE)
sales<-data.frame(영업팀=c('A팀','B팀','C팀','D팀','E팀'),매출액=c(90,45,70,67,85))
sales
p<-round(sales[,2]/sum(sales[,2])*100)
barplot(sales[,2],names.arg = sales[,1],
main='영업팀 별 매출액',
xlab='매출액[단위:억원]', ylab='영업팀', ylim=c(0,100),
cex.names=.7,col=rainbow(NROW(sales)), border="white")
pie(sales[,2],labels = paste(sales[,1],p,'%'),col=rainbow(NROW(sales)), main='영업팀 별 매출액')
install.packages("plotrix")
library(plotrix)
pie3D(sales[,2],labels = paste(sales[,1],p,'%'),col=rainbow(NROW(sales)), main='영업팀 별 매출액',explode=.1,labelcex=1.5)
#사용자가 만든 그래프(이미지) 저장
install.packages("jpeg")
library(jpeg)
jpeg("c:/data/ex170_1.jpg",width=400, height = 300, pointsize = 12)
barplot(sales[,2],names.arg = sales[,1],
main='영업팀 별 매출액',
xlab='매출액[단위:억원]', ylab='영업팀', ylim=c(0,100),
cex.names=.7,col=rainbow(NROW(sales)), border="white")
dev.off()
jpeg("c:/data/ex170_2.jpg",width=400, height = 300, pointsize = 12)
pie(sales[,2],labels = paste(sales[,1],p,'%'),col=rainbow(NROW(sales)), main='영업팀 별 매출액')
dev.off()
jpeg("c:/data/ex170_3.jpg",width=400, height = 300, pointsize = 12)
pie3D(sales[,2],labels = paste(sales[,1],p,'%'),col=rainbow(NROW(sales)), main='영업팀 별 매출액',explode=.1,labelcex=1.5)
dev.off()
for ( i in 1:3){
img<-paste("c:/data/ex170_",i,".jpg",sep="")
img<-readJPEG(img)
plot.new()
rect(0,0,1,1,col='white',border='white')
rasterImage(img,0,0,1,1)
ani.pause()
}
#animation package
install.packages("animation")
library(animation)
for ( i in 1:3){
img<-paste("c:/data/ex170_",i,".jpg",sep="")
img<-readJPEG(img)
plot.new()
rect(0,0,1,1,col='white',border='white')
rasterImage(img,0,0,1,1)
ani.pause()
}
for ( i in 1:3){
img<-paste("c:/data/ex170_",i,".jpg",sep="")
img<-readJPEG(img)
plot.new()
rect(0,0,1,1,col='white',border='white') #그래픽 프레임 영역 지정
rasterImage(img,0,0,1,1)
ani.pause(5) #잠깐 대기한 후 화면 지우고 다시 출
}
hospital
hospital<-read.csv('2016년_서울_주요구별_병원현황.csv', header=T, stringsAsFactors=F)
hospital<-read.csv('2016년_서울_주요구별_병원현황.csv', header=T, stringsAsFactors=F)
hospital<-read.csv('2016년_서울_주요구별_병원현황.csv', header=T, stringsAsFactors=F)
setwd("c:/data")
hospital<-read.csv('2016년_서울_주요구별_병원현황.csv', header=T, stringsAsFactors=F)
recent <-function(x){
bp<-barplot(as.matrix(hospital[,x]/10),names.arg=hospital[,1],
beside = T,
main = '병원현황',
xlab=x, ylab='병원수[단위 : 10]',ylim=c(0,35),
col=rainbow(length(rownames(hospital))),
cex.names=.6,width=.5,cex=.5, las=2,
border="white")
text(x=bp,y=as.matrix(hospital[,x]/10),labels=as.matrix(hospital[,2]),cex=.5,pos=3)
abline(h=seq(0,35,2),lty=3, lwd=.2)
}
x<-colnames(hospital[-1])
par(mfrow = c(2,5))
for (i in 1:length(x)) {
recent(x[i])
t<-paste("c:/data/ex169_",i,".jpg")
jpeg(t[i],width=400, height = 300, pointsize = 12)
dev.off()
}
length(x)
t
t<-append(t,t,after = length(t))
rm(t)
for (i in 1:length(x)) {
recent(x[i])
t<-paste("c:/data/ex169_",i,".jpg")
t<-append(t,t,after = length(t))
jpeg(t[i],width=400, height = 300, pointsize = 12)
dev.off()
}
t
t<-null
t<-NULL
for (i in 1:length(x)) {
recent(x[i])
t[i]<-paste("c:/data/ex169_",i,".jpg")
jpeg(t[i],width=400, height = 300, pointsize = 12)
dev.off()
}
t
t[1]
t<-NULL
for (i in 1:length(x)) {
recent(x[i])
t[i]<-paste("c:/data/ex169_",i,".jpg",sep = "")
jpeg(t[i],width=400, height = 300, pointsize = 12)
dev.off()
}
t[1]
jpeg(t[1],width = 400,height = 300,pointsize = 12)
for (i in 1:length(x)) {
recent(x[i])
t[i]<-paste("c:/data/ex169_",i,".jpg",sep = "")
#jpeg(t[i],width=400, height = 300, pointsize = 12)
#dev.off()
}
dev.off
dev.off()
for (i in 1:length(x)) {
recent(x[i])
t[i]<-paste("c:/data/ex169_",i,".jpg",sep = "")
#jpeg(t[i],width=400, height = 300, pointsize = 12)
#dev.off()
}
par(mfrow = c(2,5))
for (i in 1:length(x)) {
recent(x[i])
t[i]<-paste("c:/data/ex169_",i,".jpg",sep = "")
#jpeg(t[i],width=400, height = 300, pointsize = 12)
#dev.off()
}
t[1]
t<-NULL
rm(t)
t<-NULL
par(mfrow = c(2,5))
for (i in 1:length(x)) {
t[i]<-paste("c:/data/ex169_",i,".jpg",sep = "")
jpeg(t[i],width=400, height = 300, pointsize = 12)
recent(x[i])
dev.off()
}
t[1]
par(mfrow = c(2,5))
t<-NULL
for (i in 1:length(x)) {
t[i]<-paste("c:/data/ex169_",i,".jpg",sep = "")
jpeg(t[i],width=400, height = 300, pointsize = 12)
recent(x[i])
dev.off()
}
dev.off()
for (i in 1:length(x)) {
t[i]<-paste("c:/data/ex169_",i,".jpg",sep = "")
jpeg(t[i],width=400, height = 300, pointsize = 12)
recent(x[i])
dev.off()
}
t
barplot(sales[,2],names.arg = sales[,1],
main='영업팀 별 매출액',
xlab='매출액[단위:억원]', ylab='영업팀', ylim=c(0,100),
cex.names=.7,col=rainbow(NROW(sales)), border="white")
hospital
hospital
recent <-function(x){
bp<-barplot(as.matrix(hospital[,x]/10),names.arg=hospital[,1],
beside = T,
main = '병원현황',
xlab=x, ylab='병원수[단위 : 10]',ylim=c(0,35),
col=rainbow(length(rownames(hospital))),
cex.names=.6,width=.5,cex=.5, las=2,
border="white")
text(x=bp,y=as.matrix(hospital[,x]/10),labels=as.matrix(hospital[,2]),cex=.5,pos=3)
abline(h=seq(0,35,2),lty=3, lwd=.2)
}
x<-colnames(hospital[-1])
par(mfrow = c(2,5))
t<-NULL
for (i in 1:length(x)) {
t[i]<-paste("c:/data/ex169_",i,".jpg",sep = "")
jpeg(t[i],width=400, height = 300, pointsize = 12)
recent(x[i])
dev.off()
}
x
x
length(x)
recent(x[1])
recent <-function(x){
bp<-barplot(as.matrix(hospital[,x]/10),names.arg=hospital[,1],
beside = T,
main = '병원현황',
xlab=x, ylab='병원수[단위 : 10]',ylim=c(0,35),
col=rainbow(length(rownames(hospital))),
cex.names=.6,width=.5,cex=.5, las=2,
border="white")
text(x=bp,y=as.matrix(hospital[,x]/10),labels=as.matrix(hospital[,2]),cex=.5,pos=3)
abline(h=seq(0,35,2),lty=3, lwd=.2)
}
x<-colnames(hospital[-1])
par(mfrow = c(2,5))
t<-NULL
x
recent(x[1])
par(mfrow = c(2,5))
recent(x[1])
recent(x[2])
recent(x[3])
par(mfrow = c(2,5))
t
for (i in 1:length(x)) {
t[i]<-paste("c:/data/ex169_",i,".jpg",sep = "")
jpeg(t[i],width=400, height = 300, pointsize = 12)
recent(x[i])
dev.off()
}
for ( i in 1:length(x) ){
img<-readJPEG(t)
plot.new()
rect(0,0,1,1,col='white',border='white') #그래픽 프레임 영역 지정
rasterImage(img,0,0,1,1)
ani.pause(5) #잠깐 대기한 후 화면 지우고 다시 출
}
par(mfrow = c(2,5))
for ( i in 1:length(x) ){
img<-readJPEG(t)
plot.new()
rect(0,0,1,1,col='white',border='white') #그래픽 프레임 영역 지정
rasterImage(img,0,0,1,1)
ani.pause(5) #잠깐 대기한 후 화면 지우고 다시 출
}
par(mfrow = c(1,1))
for ( i in 1:length(x) ){
img<-readJPEG(t)
plot.new()
rect(0,0,1,1,col='white',border='white') #그래픽 프레임 영역 지정
rasterImage(img,0,0,1,1)
ani.pause(1) #잠깐 대기한 후 화면 지우고 다시 출
}
for ( i in 1:length(x) ){
img<-readJPEG(t)
plot.new()
rect(0,0,1,1,col='white',border='white') #그래픽 프레임 영역 지정
rasterImage(img,0,0,1,1)
ani.pause(1) #잠깐 대기한 후 화면 지우고 다시 출
}
par(mfrow = c(2,5))
for ( i in 1:length(x) ){
img<-readJPEG(t)
plot.new()
rect(0,0,1,1,col='white',border='white') #그래픽 프레임 영역 지정
rasterImage(img,0,0,1,1)
ani.pause(1) #잠깐 대기한 후 화면 지우고 다시 출
}
par(mfrow = c(1,1))
for ( i in 1:length(x) ){
img<-readJPEG(t[i])
plot.new()
rect(0,0,1,1,col='white',border='white') #그래픽 프레임 영역 지정
rasterImage(img,0,0,1,1)
ani.pause(1) #잠깐 대기한 후 화면 지우고 다시 출
}
data1 <- read.csv("c:/data/2016년_서울_주요구별_병원현황.csv" , header=T)
gu <- colnames(data1[2:11])
for(i in 1:10){
jpeg(paste('c:/data/',gu[i],'.jpg',sep=""),width=400,height=300,pointsize=12)
barplot(data1[1:9,i+1] * 0.1 ,
main=paste(gu[i],"병원현황"),
axes=F,
ylab="병원수(단위:10개)",
xlab="",
cex.names=0.85,
las=2,
ylim=c(0,40),
col=rainbow(length(data1$표시과목)),
border="white",
names.arg=data1$표시과목)
axis(2,ylim=seq(0,40,10))
abline(h=seq(0,40,5),lty=2)
dev.off()
}
library(animation)
for (i in gu) {
img <- paste("c:/data/",i,".jpg",sep="")
img <- readJPEG(img)
plot.new()
rasterImage(img,0,0,1,1)
ani.pause()
}
gu
for (i in gu) {
img <- paste("c:/data/",i,".jpg",sep="")
img <- readJPEG(img)
plot.new()
rasterImage(img,0,0,1,1)
ani.pause()
}
